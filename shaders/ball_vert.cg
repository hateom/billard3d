struct vertex_in 
{
    float4 pos   : POSITION;
    float4 norm  : NORMAL;
	float3 tex1  : TEXCOORD0;
    float3 tex2  : TEXCOORD1;
    float3 color : COLOR0;
};

struct vertex_out 
{
    float4 pos   : POSITION;
    float3 color : COLOR0;
	float3 tex1  : TEXCOORD0;
    float3 tex2  : TEXCOORD1;
};

vertex_out main( 
    vertex_in IN, 
    uniform float4x4 ModelViewProj, 
    uniform float4x4 ModelView, 
    uniform float4x4 ModelProj, 
    uniform float4x4 ModelViewI, 
    uniform float4x4 ModelViewIT 
    )
{
	vertex_out OUT;

    float4 vpos;
    float3 texo, R, U, inorm;
    float iM;
    float ligh;
    float4 light_pos = float4( 1.0, 1.0, -1.0, 0.0 );

    float3 lvec = mul( ModelProj, light_pos ).xyz;
    float3 half_vec;
    
    vpos = mul( ModelView, IN.pos );
    inorm = mul( ModelViewIT, IN.norm ).xyz;

    U = normalize( vpos ).xyz;
    R = reflect( U, normalize( inorm ) );
    R.z += 1.0;
    iM = 0.5  / length( R );
    texo = float3( R.x*iM + 0.5, R.y*iM + 0.5, 0.0 );

    ligh = clamp( dot( inorm, lvec ), 0.4, 0.9 );

    OUT.tex1  = IN.tex1;
    OUT.tex2  = texo;
    OUT.color = IN.color*ligh;
    
    OUT.pos   = mul( ModelViewProj, IN.pos );

	return OUT;
}

