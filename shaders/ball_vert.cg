struct vertex_in 
{
    float4 pos   : POSITION;
    float4 norm  : NORMAL;
	float3 tex1  : TEXCOORD0;
    float3 tex2  : TEXCOORD1;
    float3 color : COLOR0;
};

struct vertex_out 
{
    float4 pos   : POSITION;
    float3 color : COLOR0;
	float3 tex1  : TEXCOORD0;
    float3 tex2  : TEXCOORD1;
};

vertex_out main( vertex_in IN, uniform float4x4 ModelViewProj, uniform float4x4 ModelView, uniform float4x4 Proj )
{
	vertex_out OUT;

    float4 eye;
    float4 vpos;
    float3 texo, R, U, inorm;
    float iM;

    eye = mul( ModelViewProj, IN.pos );
    vpos = mul( ModelViewProj, IN.pos );
    inorm = mul( ModelViewProj, IN.norm ).xyz;

    U = float3( normalize( vpos ) );
    R = reflect( U, normalize( inorm ) );
    R.z += 1.0;
    iM = 0.5  / length( R );
    texo = float3( R.x*iM + 0.5, R.y*iM + 0.5, 0.0 );

    OUT.tex1  = IN.tex1;
    OUT.tex2  = texo;
    OUT.color = IN.color;
    
    OUT.pos   = mul( ModelViewProj, IN.pos );

	return OUT;
}

